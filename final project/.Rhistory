new_map
map <- get_googlemap(center =c(-71.0589,42.3601), zoom = 13, maptype = "roadmap")
ggmap(map)
map <- get_googlemap(center =c(-71.0589,42.3601), zoom = 12, maptype = "roadmap")
ggmap(map)
color_1 = c('red','orang','yellow','green','blue','purple','brown','black','cherry','dark green')
ggplot(data = new_final, aes(x = lng, y = lat , color = label), size = 5, shape = 21)+geom_point()
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat, color = label))
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat), color = color_1)
map <- get_googlemap(center =c(-71.0589,42.3601), zoom = 11, maptype = "roadmap")
ggmap(map)
color_1 = c('red','orang','yellow','green','blue','purple','brown','black','cherry','dark green')
ggplot(data = new_final, aes(x = lng, y = lat , color = label), size = 5, shape = 21)+geom_point()
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat))
new_color = c(1:3621)
for (i in c(1:3621)){
new_color[i] <- color_1[new_final$cluster[i]]
}
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat),color = new_color)
color_1 = c('red','orang','yellow','green','blue','purple','brown','black','white','dark green')
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat),color = new_color)
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat))
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat, color = label))
r_label <- c(1:950)
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - lat_label[i])**2 + (r_l_y - lng_label[i])**2
if (new_d < d){
l <- j
}
}
r_label[i] <- l
}
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - lat_label[i])**2 + (r_l_y - lng_label[i])**2
if ((new_d < d) == TRUE){
l <- j
}
}
r_label[i] <- l
}
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - lat_label[i])**2 + (r_l_y - lng_label[i])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
print(d)
for (j in c(2:10)){
new_d <- (r_l_x - lat_label[i])**2 + (r_l_y - lng_label[i])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
View(yelp)
#deal restaurant
row.has.na <- apply(df_yelp, 1, function(x){any(is.na(x))})
sum(row.has.na)
df_yelp <- df_yelp[!row.has.na,]
r_label <- c(1:950)
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
print(d)
for (j in c(2:10)){
new_d <- (r_l_x - lat_label[i])**2 + (r_l_y - lng_label[i])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
r_l_x <- df_yelp$lat[i]
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
print(i)
for (j in c(2:10)){
print(j)
new_d <- (r_l_x - lat_label[i])**2 + (r_l_y - lng_label[i])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
View(df_yelp)
typeof(df_yelp$lat)
typeof(df_yelp$lng)
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
print(i)
for (j in c(2:10)){
new_d <- (r_l_x - lat_label[i])**2 + (r_l_y - lng_label[i])**2
print(new_d)
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - lat_label[j])**2 + (r_l_y - lng_label[j])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
for (i in c(1:950)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
print(i)
for (j in c(2:10)){
print(j)
new_d <- (r_l_x - lat_label[j])**2 + (r_l_y - lng_label[j])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
r_label <- c(1:943)
for (i in c(1:943)){
r_l_x <- df_yelp$lat[i]
r_l_y <- df_yelp$lng[i]
l <- 1
d <- (r_l_x - lat_label[1])**2 + (r_l_y - lng_label[1])**2
print(i)
for (j in c(2:10)){
print(j)
new_d <- (r_l_x - lat_label[j])**2 + (r_l_y - lng_label[j])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
min(r_label)
max(r_label)
mean(r_label)
k.m$centers
label_lat <- k.m$centers$lat
label_lat <- k.m$centers["lat"]
label_lng <- k.m$centers["lng"]
label_lat <- k.m$centers[,2]
label_lng <- k.m$centers[,3]
yelp_scale <- scale(df_yelp)
yelp_lat <- yelp_scale[,2]*5
yelp_lng <- yelp_scale[,3]*5
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
r_label
yelp_lat <- yelp_scale[,2]
yelp_lng <- yelp_scale[,3]
r_label <- c(1:943)
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
}
}
r_label[i] <- l
}
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
d <- new_d
}
}
r_label[i] <- l
}
r_label
yelp_scale <- scale(df_yelp)
yelp_lat <- yelp_scale[,2]*5
yelp_lng <- yelp_scale[,3]*5
r_label <- c(1:943)
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
d <- new_d
}
}
r_label[i] <- l
}
r_label
df_yelp <- cbind(df_yelp,r_label)
View(df_yelp)
ggplot(data = df_yelp, aes(x = r_label, y = price))
ggplot(data = df_yelp, aes(x = r_label, y = price))+geom_point()
r_label <- c(1:943)
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
d <- new_d
}
}
r_label[i] <- price_label[l]
}
df_yelp <- cbind(df_yelp,r_label)
ggplot(data = df_yelp, aes(x = r_label, y = price))+geom_point()
View(df_yelp)
ggplot(data = df_yelp, aes(x = r_label, y = price))+geom_point()
new_df_yelp <- cbind(df_yelp,r_label)
yelp <- read_csv("YelpData.csv")
df_yelp <- data_frame(price = yelp$price,
lat = yelp$latitude,
lng = yelp$longitude
)
#deal restaurant
row.has.na <- apply(df_yelp, 1, function(x){any(is.na(x))})
sum(row.has.na)
df_yelp <- df_yelp[!row.has.na,]
label_lat <- k.m$centers[,2]
label_lng <- k.m$centers[,3]
yelp_scale <- scale(df_yelp)
yelp_lat <- yelp_scale[,2]*5
yelp_lng <- yelp_scale[,3]*5
r_label <- c(1:943)
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
d <- new_d
}
}
r_label[i] <- price_label[l]
}
new_df_yelp <- cbind(df_yelp,r_label)
ggplot(data = new_df_yelp, aes(x = r_label, y = price))+geom_point()
ggplot(data = new_df_yelp, aes(x = r_label, y = price, color = price))+geom_point()
View(new_df_yelp)
count(new_df_yelp$r_label == 2572.376)
length(new_df_yelp$r_label == 2572.376)
test <- new_df_yelp %>%
group_by(new_df_yelp$r_label==2572.376)
test
View(test)
test <- new_df_yelp %>%
group_by(r_label)
test
View(test)
ggplot(data = new_df_yelp, aes(x = r_label, y = price, color = price))+geom_line()
library(plyr)
count(new_df_yelp,"r_label")
fre <- count(new_df_yelp,"r_label")
View(fre)
ggplot(data = fre_1,aes(x = r_label, y = freq))+geom_line()
fre_1 <- count(new_df_yelp,"r_label")
ggplot(data = fre_1,aes(x = r_label, y = freq))+geom_line()
ggplot(data = new_df_yelp, aes(x = r_label, y = price, color = price))+geom_point()+
geom_line(data = fre_1,aes(x = r_label, y = freq))
ggplot(data = new_df_yelp, aes(x = r_label, y = price, color = price))+geom_point()
View(new_df_yelp)
library(shiny); runApp('cluster.R')
runApp('cluster.R')
runApp('cluster.R')
runApp('cluster.R')
runApp('cluster.R')
runApp('cluster.R')
knitr::opts_chunk$set(echo = TRUE)
ibrary(ggmap)
library(ggmap)
suppressMessages(library("tidyverse"))
library(magick)
library(ggplot2)
final <- read_csv("houses.csv")
df_final <- data_frame(price = final$price,
lat = final$lat,
lng = final$lng
)
yelp <- read_csv("YelpData.csv")
df_yelp <- data_frame(price = yelp$price,
lat = yelp$latitude,
lng = yelp$longitude
)
final.scale <- scale(df_final)
final.scale[,2] <- final.scale[,2] *5
final.scale[,3] <- final.scale[,3] *5
#Elbow Method for finding the optimal number of clusters
set.seed(123)
# Compute and plot wss for k = 2 to k = 15.
k.max <- 15
data <- final.scale
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# Choose 10 as the number of cluters
k.m <- kmeans(data, 10, nstart = 50, iter.max = 15)
df_cluster <- data_frame(cluster = k.m$cluster)
new_final <- cbind(df_final, df_cluster)
price_label <- c(1:10)
lat_label <- c(1:10)
lng_label <- c(1:10)
for (i in c(1:10)){
new_final$label[new_final$cluster == i] <- mean(new_final$price[new_final$cluster == i])
price_label[i] <- mean(new_final$price[new_final$cluster == i])
lat_label[i] <- mean(new_final$lat[new_final$cluster == i])
lng_label[i] <- mean(new_final$lng[new_final$cluster == i])
}
price_label
lat_label
lng_label
new_final$new_label <- factor(new_final$label)
register_google(key = 'AIzaSyAmOQseQL27vmpzc4Lpddmocrzv1jDkXwg')
map <- get_googlemap(center =c(-71.0589,42.3601), zoom = 11, maptype = "roadmap")
ggmap(map)
ggplot(data = new_final, aes(x = lng, y = lat , color = new_label), size = 5, shape = 21)+geom_point()
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat, color = new_label))
row.has.na <- apply(df_yelp, 1, function(x){any(is.na(x))})
sum(row.has.na)
df_yelp <- df_yelp[!row.has.na,]
label_lat <- k.m$centers[,2]
label_lng <- k.m$centers[,3]
yelp_scale <- scale(df_yelp)
yelp_lat <- yelp_scale[,2]*5
yelp_lng <- yelp_scale[,3]*5
r_label <- c(1:943)
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
d <- new_d
}
}
r_label[i] <- price_label[l]
}
new_df_yelp <- cbind(df_yelp,r_label)
names(new_df_yelp)[4] <- paste("house_price")
ggplot(data = new_df_yelp, aes(x = house_price, y = price, color = price))+geom_point()
library(plyr)
fre_1 <- count(new_df_yelp,"house_price")
ggplot(data = fre_1,aes(x = house_price, y = freq))+geom_line()
library(plyr)
fre_1 <- count(new_df_yelp,"house_price")
ggplot(data = fre_1,aes(x = house_price, y = freq))+geom_line()
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
suppressMessages(library("tidyverse"))
library(magick)
library(ggplot2)
final <- read_csv("houses.csv")
df_final <- data_frame(price = final$price,
lat = final$lat,
lng = final$lng
)
yelp <- read_csv("YelpData.csv")
df_yelp <- data_frame(price = yelp$price,
lat = yelp$latitude,
lng = yelp$longitude
)
final.scale <- scale(df_final)
final.scale[,2] <- final.scale[,2] *5
final.scale[,3] <- final.scale[,3] *5
#Elbow Method for finding the optimal number of clusters
set.seed(123)
# Compute and plot wss for k = 2 to k = 15.
k.max <- 15
data <- final.scale
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# Choose 10 as the number of cluters
k.m <- kmeans(data, 10, nstart = 50, iter.max = 15)
df_cluster <- data_frame(cluster = k.m$cluster)
new_final <- cbind(df_final, df_cluster)
price_label <- c(1:10)
lat_label <- c(1:10)
lng_label <- c(1:10)
for (i in c(1:10)){
new_final$label[new_final$cluster == i] <- mean(new_final$price[new_final$cluster == i])
price_label[i] <- mean(new_final$price[new_final$cluster == i])
lat_label[i] <- mean(new_final$lat[new_final$cluster == i])
lng_label[i] <- mean(new_final$lng[new_final$cluster == i])
}
price_label
lat_label
lng_label
new_final$new_label <- factor(new_final$label)
register_google(key = 'AIzaSyAmOQseQL27vmpzc4Lpddmocrzv1jDkXwg')
map <- get_googlemap(center =c(-71.0589,42.3601), zoom = 11, maptype = "roadmap")
ggmap(map)
ggplot(data = new_final, aes(x = lng, y = lat , color = new_label), size = 5, shape = 21)+geom_point()
ggmap(map)+
geom_point(data = new_final,aes(x = lng, y = lat, color = new_label))
row.has.na <- apply(df_yelp, 1, function(x){any(is.na(x))})
sum(row.has.na)
df_yelp <- df_yelp[!row.has.na,]
label_lat <- k.m$centers[,2]
label_lng <- k.m$centers[,3]
yelp_scale <- scale(df_yelp)
yelp_lat <- yelp_scale[,2]*5
yelp_lng <- yelp_scale[,3]*5
r_label <- c(1:943)
for (i in c(1:943)){
r_l_x <- yelp_lat[i]
r_l_y <- yelp_lng[i]
l <- 1
d <- (r_l_x - label_lat[1])**2 + (r_l_y - label_lng[1])**2
for (j in c(2:10)){
new_d <- (r_l_x - label_lat[j])**2 + (r_l_y - label_lng[j])**2
if (d > new_d){
l <- j
d <- new_d
}
}
r_label[i] <- price_label[l]
}
new_df_yelp <- cbind(df_yelp,r_label)
names(new_df_yelp)[4] <- paste("house_price")
ggplot(data = new_df_yelp, aes(x = house_price, y = price, color = price))+geom_point()
library(plyr)
fre_1 <- count(new_df_yelp,"house_price")
ggplot(data = fre_1,aes(x = house_price, y = freq))+geom_line()
