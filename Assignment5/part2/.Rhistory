library(stringr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
veg.1 <- read_xlsx("veg1.xlsx")
a <- apply(veg.1, 2, n_distinct)
c <- names(a[a>1])
veg2 <- select(veg.1, c)
apply(veg2, 2, n_distinct)
veg.3 <- dplyr::rename(veg2,
Geo = `Geo Level`,
State = `State ANSI`,
Data = `Data Item`,
Category = `Domain Category`)
cnames.3 <- colnames(veg.3)
cnames.3
unique(veg.3[,"Commodity"])
unique(veg.3[,"Data"]) %>% print(n=60)
unique(veg.3[,"Domain"])
unique(veg.3[,"Category"])
unique(veg.3[,"Value"])
veg.3 <- veg.3 %>%
separate(Category, into = c("Label", "Chemical"), sep=",") %>%
separate(Data, into=c("Vegetable","Class Desc"),sep=" - ") %>%
separate(`Class Desc`, into=c("Class","Production Practice","Unit"),sep=",") %>%
separate(`Production Practice`,into=c("Production Practice","Utilization Practice","Statistic Category"),sep=" / ") %>%
separate(Domain,into=c("Domain","Type"),sep=", ")
veg.3 <- veg.3 %>%
separate(Chemical, into=c("DuplicateType","Active Ingredient or Action Taken"),sep=": ") %>%
separate(`Active Ingredient or Action Taken`, into=c("Temp1","Active ingredient or Action Taken","Temp2"),sep=c(1,-2)) %>%
separate(`Active ingredient or Action Taken`, into=c("Active ingredient or Action Taken","EPA Pesticide Chemical Code"),sep="=") %>%
separate(Geo,into=c("Area","Temp3"),sep=" : ") %>%
select(-Vegetable,-Label,-DuplicateType,-Temp1,-Temp2,-Temp3)
veg4 <- veg.3 %>%
filter(Domain=="RESTRICTED USE CHEMICAL") %>%
select(Commodity, Domain:`EPA Pesticide Chemical Code`) %>%
unique()
toxicity <- tibble(
`Toxicity Measurements(mg/kg)` =
c(20, 5620, 20, 11,
869, 54, 5000, 82,
869, 3129, 458, 450,
14, 12, 50, 50,
430, 1563, 86,380,
54, 5000, 3129, 458,
450, 144, 12, 50,
50, 430, 1563, 86,
300, 60, 1.9, 72.1,
82, 869, 150, 300,
4640, 56, 16, 73,
1.9, 56, 73, 121
)
)
veg4 <- veg4 %>%
bind_cols(toxicity)
broccoli<-filter(veg4,Commodity=="BROCCOLI")
cauliflower<-filter(veg4,Commodity=="CAULIFLOWER")
new_broccoli <- broccoli[c(input$range3[1]:input$range3[2]),]
graph1<-ggplot(data=broccoli,mapping=aes(x=`Active ingredient or Action Taken`,
y=`Toxicity Measurements(mg/kg)`))+labs(title = "Broccoli")+
geom_bar(stat = "identity")+coord_flip()
graph1<-ggplot(data=broccoli,mapping=aes(x=`Active ingredient or Action Taken`,
y=`Toxicity Measurements(mg/kg)`))+labs(title = "Broccoli")+
geom_bar(stat = "identity")+coord_flip()
plot(graph1)
graph2<-ggplot(data=cauliflower,mapping=aes(x=`Active ingredient or Action Taken`,
y=`Toxicity Measurements(mg/kg)`))+labs(title = "Cauliflower")+
geom_bar(stat = "identity")+coord_flip()
plot(graph2)
library(stringr)
suppressMessages(library(tidyverse))
library(dplyr)
library(ggplot2)
library(readxl)
veg.1 <- read_xlsx("veg1.xlsx")
a <- apply(veg.1, 2, n_distinct)
c <- names(a[a>1])
veg2 <- select(veg.1, c)
apply(veg2, 2, n_distinct)
veg.3 <- dplyr::rename(veg2,
Geo = `Geo Level`,
State = `State ANSI`,
Data = `Data Item`,
Category = `Domain Category`)
cnames.3 <- colnames(veg.3)
cnames.3
unique(veg.3[,"Commodity"])
unique(veg.3[,"Data"]) %>% print(n=60)
unique(veg.3[,"Domain"])
unique(veg.3[,"Category"])
unique(veg.3[,"Value"])
veg.3 <- veg.3 %>%
separate(Category, into = c("Label", "Chemical"), sep=",") %>%
separate(Data, into=c("Vegetable","Class Desc"),sep=" - ") %>%
separate(`Class Desc`, into=c("Class","Production Practice","Unit"),sep=",") %>%
separate(`Production Practice`,into=c("Production Practice","Utilization Practice","Statistic Category"),sep=" / ") %>%
separate(Domain,into=c("Domain","Type"),sep=", ")
veg.3 <- veg.3 %>%
separate(Chemical, into=c("DuplicateType","Active Ingredient or Action Taken"),sep=": ") %>%
separate(`Active Ingredient or Action Taken`, into=c("Temp1","Active ingredient or Action Taken","Temp2"),sep=c(1,-2)) %>%
separate(`Active ingredient or Action Taken`, into=c("Active ingredient or Action Taken","EPA Pesticide Chemical Code"),sep="=") %>%
separate(Geo,into=c("Area","Temp3"),sep=" : ") %>%
select(-Vegetable,-Label,-DuplicateType,-Temp1,-Temp2,-Temp3)
veg4 <- veg.3 %>%
filter(Domain=="RESTRICTED USE CHEMICAL") %>%
select(Commodity, Domain:`EPA Pesticide Chemical Code`) %>%
unique()
toxicity <- tibble(
`Toxicity Measurements(mg/kg)` =
c(20, 5620, 20, 11,
869, 54, 5000, 82,
869, 3129, 458, 450,
14, 12, 50, 50,
430, 1563, 86,380,
54, 5000, 3129, 458,
450, 144, 12, 50,
50, 430, 1563, 86,
300, 60, 1.9, 72.1,
82, 869, 150, 300,
4640, 56, 16, 73,
1.9, 56, 73, 121
)
)
veg4 <- veg4 %>%
bind_cols(toxicity)
broccoli<-filter(veg4,Commodity=="BROCCOLI")
cauliflower<-filter(veg4,Commodity=="CAULIFLOWER")
graph1<-ggplot(data=broccoli,mapping=aes(x=`Active ingredient or Action Taken`,
y=`Toxicity Measurements(mg/kg)`))+labs(title = "Broccoli")+
geom_bar(stat = "identity")+coord_flip()
plot(graph1)
graph2<-ggplot(data=cauliflower,mapping=aes(x=`Active ingredient or Action Taken`,
y=`Toxicity Measurements(mg/kg)`))+labs(title = "Cauliflower")+
geom_bar(stat = "identity")+coord_flip()
plot(graph2)
library(stringr)
suppressMessages(library(tidyverse))
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time_seq[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
temperature <- data %>%
filter(hh==12)
temperature[temperature$YY < 99,]$YY <-temperature[temperature$YY < 99,]$YY + 1900
temperature <- temperature %>%
filter(ATMP<99) %>%
filter(WTMP<99)
temperature$ATMP <- as.numeric(temperature$ATMP)
temperature$WTMP <- as.numeric(temperature$WTMP)
temperature$time<-paste(temperature$YY,"-",temperature$MM,"-",temperature$DD,sep = "")
temperature$time<-as.Date(temperature$time)
year_1988<-temperature[temperature$YY==1988,]
year_2017<-temperature[temperature$YY==2017,]
A_1988<-sample(year_1988$ATMP,size=200)
A_2017<-sample(year_2017$ATMP,size=200)
W_1988<-sample(year_1988$WTMP,size=200)
W_2017<-sample(year_2017$WTMP,size=200)
test_A<-t.test(A_1988,A_2017)
test_W<-t.test(W_1988,W_2017)
graph <- temperature %>% ggplot(aes(time, ATMP)) +
geom_line(na.rm = TRUE, col = "blue") +
labs(title = "Time Series of Air Temperature",
subtitle = "Data obtained from the National Data Buoy Center",
y = "Temperature",
x = "Year")
plot(graph)
graph <- temperature %>% ggplot(aes(time, WTMP)) +
geom_line(na.rm = TRUE, col = "blue") +
labs(title = "Time Series of Sea Temperature",
subtitle = "Data obtained from the National Data Buoy Center",
y = "Temperature",
x = "Year")
plot(graph)
graph <- ggplot(temperature, aes(time)) +
geom_line(aes(y = ATMP, col = "ATMP")) +
geom_line(aes(y = WTMP, col = "WTMP")) +
scale_colour_manual(values=c("red", "blue")) +
labs(x = "Year", y = "Temperature",
title = "Time Series of Air & Sea Temperature",
subtitle = "Data obtained from the National Data Buoy Center")
plot(graph)
graph <- ggplot(temperature) +
geom_point(mapping = aes(x = ATMP, y = WTMP)) +
labs(x = "Air Temperature",
y = "Sea Temperature",
title = "Scatter Plot of Correlation between ATMP and WTMP")
plot(graph)
graph <- ggplot(temperature) +
geom_smooth(mapping = aes(x = ATMP, y = WTMP)) +
labs(x = "Air Temperature",
y = "Sea Temperature",
title = "Smooth Line of Correlation between ATMP and WTMP")
plot(graph)
