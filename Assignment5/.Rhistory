labs(x = "temperature Air Temp (Celcius)",
y = "temperature Sea Temp (Celcius)",
title = "Scatter Plot to See the Correlation between ATMP and WTMP")
print(graph)
}
if (input$cor_mode == "Smooth Line") {
graph <- ggplot(temperature) +
geom_smooth(mapping = aes(x = ATMP, y = WTMP)) +
labs(x = "temperature Air Temp (Celcius)",
y = "temperature Sea Temp (Celcius)",
title = "Smooth Line to See the Correlation between ATMP and WTMP")
print(graph)
}
})
}
library(stringr)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(dplyr)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
data <- subset(data,data$ATMP!=999 & data$WTMP!=999)
data[data$YY < 99,]$YY <-data[data$YY < 99,]$YY + 1900
temperature <- data %>%
group_by(MM,YY,DD)%>%
summarise(ATMP=mean(ATMP),WTMP=mean(WTMP))
temperature$time<-paste(temperature$YY,"-",temperature$MM,"-",temperature$DD,sep = "")
temperature$time<-as.Date(temperature$time)
# Define UI
ui <- dashboardPage(
dashboardHeader(title = "The Air & Sea Temperature"),
dashboardSidebar(
sidebarMenu(
menuItem("Time Series", tabName = "time_series"),
menuItem("Air & Sea Temp. Correlation", tabName = "correlation")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "time_series",
fluidRow(
box(selectInput("time_series_mode",
"Mode:",
choices = list("Air Temperature", "Sea Temperature",
"Air and Sea Temperatures")),
plotOutput("plot1"), width = 12)
),
p("The above is a time series represenation of data collected for air and sea temperatures
from NOAA's National Data Buoy Center at buoy 46035 located in the Bering Sea,
except for the years 2012 and 2013, for which data was missing.")
),
tabItem(tabName = "correlation",
fluidRow(
box(selectInput("cor_mode",
"Mode:",
choices = list("Scatter Plot", "Smooth Line")),
plotOutput("plot2"), width = 12)
),
p("we find ATMP and WTMP have coefficient of correlation of 0.877495. Therefore, we prove that ATMP and WTMP do have strong correlation")
)
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$plot1 <- renderPlot({
if (input$time_series_mode == "Air Temperature") {
graph <- temperature %>% ggplot(aes(Date, ATMP)) +
geom_line(na.rm = TRUE, col = "red") +
labs(title = "Time Series of Air Temperature (temperature)",
subtitle = "Data obtained from the National Data Buoy Center",
y = "Temperature (Celcius)",
x = "Year")
print(graph)
}
if (input$time_series_mode == "Sea Temperature") {
graph <- temperature %>% ggplot(aes(Date, WTMP)) +
geom_line(na.rm = TRUE, col = "blue") +
labs(title = "Time Series of Sea Temperature (temperature)",
subtitle = "Data obtained from the National Data Buoy Center",
y = "Temperature (Celcius)",
x = "Year")
print(graph)
}
if (input$time_series_mode == "Air and Sea Temperatures") {
graph <- ggplot(temperature, aes(Date)) +
geom_line(aes(y = ATMP, col = "ATMP")) +
geom_line(aes(y = WTMP, col = "WTMP")) +
scale_colour_manual(values=c("red", "blue")) +
labs(x = "Year", y = "Temperature (Celcius Degree)",
title = "Time Series of Air & Sea Temperature (temperature Data)",
subtitle = "Data obtained from the National Data Buoy Center")
print(graph)
}
})
output$plot2 <- renderPlot({
if (input$cor_mode == "Scatter Plot") {
graph <- ggplot(temperature) +
geom_point(mapping = aes(x = ATMP, y = WTMP)) +
labs(x = "temperature Air Temp (Celcius)",
y = "temperature Sea Temp (Celcius)",
title = "Scatter Plot to See the Correlation between ATMP and WTMP")
print(graph)
}
if (input$cor_mode == "Smooth Line") {
graph <- ggplot(temperature) +
geom_smooth(mapping = aes(x = ATMP, y = WTMP)) +
labs(x = "temperature Air Temp (Celcius)",
y = "temperature Sea Temp (Celcius)",
title = "Smooth Line to See the Correlation between ATMP and WTMP")
print(graph)
}
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('assignment5-p1.R')
runApp('~/Desktop/MA615/class19/new_dash/class_dash.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
data <- subset(data,data$ATMP!=999 & data$WTMP!=999)
data[data$YY < 99,]$YY <-data[data$YY < 99,]$YY + 1900
temperature <- data %>%
group_by(MM,YY,DD)%>%
summarise(ATMP=mean(ATMP),WTMP=mean(WTMP))
temperature$time<-paste(temperature$YY,"-",temperature$MM,"-",temperature$DD,sep = "")
temperature$time<-as.Date(temperature$time)
View(ui)
library(stringr)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
data <- data %>%
filter(ATMP<99) %>%
filter(WTMP<99)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
data[data$YY < 99,]$YY <-data[data$YY < 99,]$YY + 1900
data <- data %>%
filter(ATMP<99) %>%
filter(WTMP<99)
View(data)
View(data)
View(data)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
noon <- data %>% filter((hh == "11" & mm == "50") | (hh == "12" & mm == "00"))
library(ggplot2)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
noon <- data %>% filter((hh == "11" & MM == "50") | (hh == "12" & MM == "00"))
View(noon)
data <- data %>%
filter(hh==12)
View(data)
data[data$YY < 99,]$YY <-data[data$YY < 99,]$YY + 1900
data <- data %>%
filter(ATMP<99) %>%
filter(WTMP<99)
View(data)
temperature <- data %>%
filter(hh==12)
temperaturea[temperature$YY < 99,]$YY <-temperature[temperature$YY < 99,]$YY + 1900
library(ggplot2)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
temperature <- data %>%
filter(hh==12)
temperaturea[temperature$YY < 99,]$YY <-temperature[temperature$YY < 99,]$YY + 1900
library(ggplot2)
time_seq <- seq(1988,2017)[-26]
for (i in 1:length(time_seq)){
filename<-paste("weather data/",time[i],".txt",sep = "")
tex<-read.table(filename,header = TRUE, fill = TRUE)
if(length(tex[1,])==16|length(tex[1,])==17){
sub_tex<-tex[,c(1,2,3,4,13,14)]
}
if(length(tex[1,])==18){
sub_tex<-tex[,c(1,2,3,4,14,15)]
}
names(sub_tex)<-c('YY','MM','DD','hh','ATMP','WTMP')
if (i == 1){
data <- sub_tex
}
else{
data<-rbind(data,sub_tex)
}
}
temperature <- data %>%
filter(hh==12)
temperature[temperature$YY < 99,]$YY <-temperature[temperature$YY < 99,]$YY + 1900
temperature <- temperature %>%
filter(ATMP<99) %>%
filter(WTMP<99)
temperature$ATMP <- as.numeric(temperature$ATMP)
temperature$WTMP <- as.numeric(temperature$WTMP)
temperature$time<-paste(temperature$YY,"-",temperature$MM,"-",temperature$DD,sep = "")
temperature$time<-as.Date(temperature$time)
View(temperature)
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
runApp('assignment5-p1.R')
library(stringr)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
setwd("~/Desktop/assignment5")
veg1 <- read_xlsx("veg1.xlsx")
install.packages("readxl")
install.packages("readxl")
veg1 <- read_xlsx("veg1.xlsx")
veg1 <- read_excel("veg1.xlsx")
library(readxl)
veg1 <- read_excel("veg1.xlsx")
veg1 <- read_xlsx("veg1.xlsx")
veg.1 <- read_xlsx("veg1.xlsx")
cnames.1 <- colnames(veg.1)
## try
n_distinct(veg.1[,1])
library(stringr)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
library(readxl)
veg.1 <- read_xlsx("veg1.xlsx")
cnames.1 <- colnames(veg.1)
## try
n_distinct(veg.1[,1])
n_distinct(veg.1[,2])
unique(veg.1[,2])
c <- apply(veg.1, 2, n_distinct)
c
c[c>1]
d <- names(c[c==1])
d
e <- names(c[c>1])
e
veg.2 <- select(veg.1, e)
cnames.2 <- colnames(veg.2)
cnames.2
apply(veg.2, 2, n_distinct)
veg.3 <- dplyr::rename(veg.2,
Geo = `Geo Level`,
State = `State ANSI`,
Data = `Data Item`,
Category = `Domain Category`)
cnames.3 <- colnames(veg.3)
cnames.3
veg.3
unique(veg.3[,"Commodity"])
unique(veg.3[,"Data"]) %>% print(n=60)
unique(veg.3[,"Domain"])
unique(veg.3[,"Category"])
unique(veg.3[,"Value"])
View(veg.3)
View(veg.3)
yy <- separate(veg.3, Category, into = c("label", "quant"), sep=",")
n_distinct(yy[,2])
ru <- filter(yy, label=="RESTRICTED USE CHEMICAL")
View(ru)
CAS <- t(as.data.frame(strsplit(ru1$quant, "=")))
ru1 <- ru %>% select(label, quant) %>% unique()
CAS <- t(as.data.frame(strsplit(ru1$quant, "=")))
CAS[,2] <- substr(CAS[,2], 1, nchar(CAS[,2])-1)
ru2 <- cbind(ru1, CAS[,2])
row.names(ru2) <- 1:284
library(stringr)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
library(readxl)
library(stringr)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
library(readxl)
veg.1 <- read_xlsx("veg1.xlsx")
cnames.1 <- colnames(veg.1)
## try
n_distinct(veg.1[,1])
n_distinct(veg.1[,2])
unique(veg.1[,2])
c <- apply(veg.1, 2, n_distinct)
c
c[c>1]
d <- names(c[c==1])
d
e <- names(c[c>1])
e
veg.2 <- select(veg.1, e)
cnames.2 <- colnames(veg.2)
cnames.2
apply(veg.2, 2, n_distinct)
veg.3 <- dplyr::rename(veg.2,
Geo = `Geo Level`,
State = `State ANSI`,
Data = `Data Item`,
Category = `Domain Category`)
cnames.3 <- colnames(veg.3)
cnames.3
veg.3
unique(veg.3[,"Commodity"])
unique(veg.3[,"Data"]) %>% print(n=60)
unique(veg.3[,"Domain"])
unique(veg.3[,"Category"])
unique(veg.3[,"Value"])
yy <- separate(veg.3, Category, into = c("label", "quant"), sep=",")
ru <- filter(yy, label=="RESTRICTED USE CHEMICAL")
ru1 <- ru %>% select(label, quant) %>% unique()
CAS <- t(as.data.frame(strsplit(ru1$quant, "=")))
CAS[,2] <- substr(CAS[,2], 1, nchar(CAS[,2])-1)
ru2 <- cbind(ru1, CAS[,2])
row.names(ru2) <- 1:284
View(ru2)
View(ru2)
row.names(ru2) <- c(1:284)
ru1 <- ru %>% select(label, quant) %>% unique()
ru3 <- ru1 %>% separate (quant, c("ChemType", "ChemName"), sep = ":") %>%  mutate (Value = str_extract(Value, "^\\w+"))
veg.1 <- read_xlsx("veg1.xlsx")
a <- apply(veg1, 2, n_distinct)
c <- names(a[a>1])
veg2 <- select(veg1, c)
apply(veg2, 2, n_distinct)
veg.tidy <- veg2 %>%
dplyr::rename(Area = `Geo Level`, State = `State ANSI`,
Data = `Data Item`, Category = `Domain Category`) %>%
separate(Category, into = c("Label", "Type"), sep=",") %>%
separate(Data, into=c("A","Class Desc"),sep=" - ") %>%
separate(`Class Desc`, into=c("Class Desc","Production Practice","Unit Desc"),sep=",") %>%
separate(`Production Practice`,into=c("Production Practice","Utilization Practice","Statistic Category"),sep=" / ") %>%
separate(Domain,into=c("Domain","B"),sep=", ") %>%
dplyr::rename(Type=`B`,Chemical=`Type`) %>%
separate(Chemical, into=c("C","Active Ingredient or Action Taken"),sep=": ") %>%
separate(`Active Ingredient or Action Taken`, into=c("D","Active ingredient or Action Taken","E"),sep=c(1,-2)) %>%
separate(`Active ingredient or Action Taken`, into=c("Active ingredient or Action Taken","EPA Pesticide Chemical Code"),sep="=") %>%
separate(Area,into=c("Area","G"),sep=" : ") %>%
select(-A,-Label,-C,-D,-E,-G)
veg4 <- veg.tidy %>%
filter(Domain=="RESTRICTED USE CHEMICAL") %>%
select(Commodity, Domain:`EPA Pesticide Chemical Code`) %>%
unique()
##toxicity measurement
toxicity <- tibble(
`Toxicity Measurements(mg/kg)` =
c(20, 5620, 20, 11,
869, 54, 5000, 82,
869, 3129, 458, 450,
14, 12, 50, 50,
430, 1563, 86,380,
54, 5000, 3129, 458,
450, 144, 12, 50,
50, 430, 1563, 86,
300, 60, 1.9, 72.1,
82, 869, 150, 300,
4640, 56, 16, 73,
1.9, 56, 73, 121
)
)
veg4 <- veg4 %>%
bind_cols(toxicity)
bro<-filter(veg4,Commodity=="BROCCOLI")
cau<-filter(veg4,Commodity=="CAULIFLOWER")
graph1<-ggplot(data=bro,mapping=aes(x=`Active ingredient or Action Taken`,
y=`Toxicity Measurements(mg/kg)`))+labs(title = "Broccoli")+
geom_bar(stat = "identity")+coord_flip()
graph2<-ggplot(data=cau,mapping=aes(x=`Active ingredient or Action Taken`,
y=`Toxicity Measurements(mg/kg)`))+labs(title = "Cauliflower")+
geom_bar(stat = "identity")+coord_flip()
View(CAS)
